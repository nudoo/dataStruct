线性表List:
1.定义：零或多个数据元素的有限序列。
	1.数据有限
	2.有序。每一个元素都只有一个前驱元素跟一个后继元素(第一个元素没有前驱，最后一个元素没有后继)。
2.顺序存储结构：用一段连续的内存空间一次存储线性表中的数据元素。
3.地址计算方法：
	假设每个数据元素占c个存储单元，则：
	LOC(a[i+1]) = LOC(a[i])+c;
	因此，有：
	LOC(a[i]) = LOC(a[0])+i*c;
4.时间复杂度：
	读取(get)数据：O(1);
	添加(add)数据：O(1);
	插入(insert):O(n);
	删除(delete):O(n).
	添加或读取数据不会改变线性表中其他元素的位置，而插入或删除会使目标位置后面的所有元素改变存储地址。
5.优点：无需为表中元素的逻辑关系增加额外的存储空间；
		可以快速地存取表中任一位置的元素。
      缺点：插入和删除操作需要移动大量的元素；
                  当线性表长度变化较大时，难以确定存储空间的容量；
                  造成存储空间的碎片。
6.线性表的链式存储结构。
	数据元素在存储时，不仅要存储本身的信息，还要存储其直接后继元素的存储地址。
	这样包含数据域跟指针域的存储映像，称为 节点(Node)。
	SLNode{element,next}
	n个节点链接成一个链表，即为线性表的链式存储结构。
	链表的第一个节点称为首节点，最后一个节点称为尾节点。
	时间复杂度：
		读取数据O(n)
		增删数据O(1)
	单链表中的数据元素的插入（删除）是通过节点的插入（删除）来完成的，因此效率比在数组中高得多。
7.双向链表
	在单链表节点中增加一个域，用于指向节点的直接前驱结点。
	DLNode{pre,element,next}
	
		